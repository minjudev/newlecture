html, body {
    height: 100%;
}

#root {
    display: grid;
    /* 1. 너비에 맞춰서 그리드 그리기
            1. 고정 개수로 맞추기
                grid-template-columns: 1fr 1fr; 
                grid-template-rows: 1fr auto;
            2. 고정 크기로 맞추기
                - 고정 크기의 고정 개수 맞추기
                    grid-tempate-columns: 100px 100px 100px
                    grid-tempate-rows: 100px 100px
                - 고정 크기의 개수는 미정(너비가 허락되는 한 모든 여백(부모와 연관되어있음)에 대해 트랙을 만드시오)
                    grid-tempate-columns: repeat(auto-fill, 100px); 
                    grid-tempate-rows: repeat(auto-fill, 100px); 
                    height: 100%;
                * 고정 크기 단위: min-content / max-content / fr / px, cm, em, % / minmax
                    - min-content: 한 단어의 최댓값이 컨텐츠의 너비가 됨
                    - max-content: 컨텐츠에 따라서 컨텐츠의 너비에 맞게 너비가 됨
                    
                    /* min 이하로는 안 줄어들고(min 이하로 줄어들게 하면 스크롤바 생김) max 이상으로는 안 커짐 */
                    /* grid-template-columns: minmax(100px, auto); */
                    /* grid-template-columns: minmax(500px, 700px);  */
                    /* 처음 나타나는 모양은 max - 700px의 사이즈로 나타남 */
                    /* grid-template-columns: max-content; 
                

        2. 트랙을 준비하지 않고 아이템에 맞춰서 그리드 그리기(아이템에 따라 너비가 늘어나게끔) */
        /* auto-fill: 여백에 선을 미리 그어줌 */ 
        /* auto-fit: 아이템에 맞춰서 그리드를 그리겠다는 의미 */ 
        
        /* auto-fit: 아이템이 있어야만 선이 그려짐 */
        /* grid-template-columns: repeat(auto-fit, minmax(100px, auto)); 
        grid-template-rows: repeat(auto-fit, 100px); 
        height: 100%; */

        /* 위의 방법을 좀 더 간단한 방법으로 구현하기 */
        /* grid-auto는 repeat 기능처럼 자동으로 반복해줌 */
        /* grid-auto의 repeat 기능은 grid-template-areas와 함께 생각하기 */
        /* grid-auto를 사용하면 아이템 개수는 html 아이템에 맞춰지고, 모양은 css grid-auto에 맞춰짐 */
        
        grid-template-areas: 
        "a a b"
        "a a b"
        "c d d";
        grid-auto-columns: 100px; 
        grid-auto-rows: 100px; 
        /* grid-auto-flow: column;  */
        /* 다시 확인하기 */ /* 기본값: row */
        height: 100%; 

        /* grid-template-columns: repeat(auto-fit, minmax(100px, auto)); 
        grid-template-rows: repeat(auto-fit, 100px); 
        height: 100%; */
        /* column-gap: 10px;
        row-gap: 10px; */
        /*gap: 10px;*/ /* row-gap + column-gap */
        /*gap: 20px 10px;*/ /* row-gap column-gap */
        
        /* Box alignment */
        /* flex
        1. 수평축 정렬
            justify-content: center;
            justify-items: ;
        2. 수직축 정렬
            align-items: ; */

        /* grid */
        /* 1. inline 축(수평) 정렬 */
            /* justify-content: center; 
               justify-items: center; */
            /* justify-items: center; 기본형: stretch */
                                    /* center: 콘텐츠가 가운데로 모임 */
        /* 2. block 축(수직) 정렬 */
            /* align-content: center;
            align-items: start; */ 
            /* grid 정렬에서는 flex-start 및 flex-end 용어 사용하지 않기 */
}

.box1 {
    background-color: red;
    justify-self: start;
    grid-area: a;
}

.box2 {
    background-color: green;
    align-self: center;
    grid-area: b;
}

.box3 {
    background-color: blue;
    align-self: end;
    grid-area: c;
}

.box4 {
    background-color: blueviolet;
    align-self: end;
    grid-area: d;
}